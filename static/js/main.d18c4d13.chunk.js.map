{"version":3,"sources":["reducers/cart.js","reducers/index.js","reducers/products.js","actions/actionTypes.js","components/Home.js","Helper/urls.js","actions/products.js","components/ProductList.js","actions/cart.js","components/Cart.js","components/Navbar.js","components/Notifcations.js","components/App.js","index.js","store/index.js"],"names":["intialState","addedItems","ItemsCount","combineReducers","products","state","action","type","cart","console","log","index","findIndex","item","title","product","push","obj","length","splice","Home","this","props","className","Component","APIUrls","fetchProducts","dispatch","url","fetch","then","response","body","json","data","sort","sortByPrice","a","b","price","ProductList","handleAddToCartClick","incrementCart","addToCart","setState","added","forceUpdate","onClick","sortProducts","map","src","imageUrl","alt","connect","Cart","handleRemoveFromCartClick","decrementCart","removeFromCart","Items","undefined","Navbar","id","to","class","Notification","autohide","bodyClassName","closeClassName","fade","icon","iconClassName","message","show","text","titleClassName","style","width","position","top","right","zIndex","App","exact","path","render","store","createStore","reducers","applyMiddleware","thunk","logger","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d18c4d13.chunk.js","sourcesContent":["import {ADDITEM, REMOVEITEM, INCREMENT_CART, DECREMENT_CART} from '../actions/actionTypes'\r\nimport { incrementCart } from '../actions/cart';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n const intialState={\r\n   \r\n    addedItems:[],\r\n    ItemsCount:0\r\n};\r\n \r\nfunction remove(products){\r\n    this.state.addedIems=this.state.addedIems.filter(function(product){\r\n        return product.title!==products.title\r\n    });\r\n}\r\n\r\nexport default function cart(state=intialState, action){\r\n    console.log(\"action cart\", action, state);\r\n   //state=state.state.state;\r\n    switch(action.type){\r\n        case ADDITEM:{\r\n            console.log(\"this.state\", state);\r\n            //NotificationManager.info('Info message');\r\n            const index=state.state.state.addedItems.findIndex(item=>item.title===action.product.title);\r\n            if(index==-1)\r\n            {\r\n                state.state.state.addedItems.push(action.product);\r\n            }\r\n            let obj={\r\n               ...state,\r\n           //   addedItems:[...state.state.state.addedItems,state.state.state.addedItems.push(action.product)],\r\n                ItemsCount:state.state.state.addedItems.length\r\n            };\r\n            console.log(\"obj\", obj);\r\n            return obj\r\n        }\r\n            case REMOVEITEM:{\r\n                const index=state.state.state.addedItems.findIndex(item=>item.title===action.product.title);\r\n                console.log(\"index\", index, state);\r\n                if(index!=-1)\r\n                {\r\n                    state.state.state.addedItems.splice(index,1); \r\n                }\r\n               let obj={\r\n                    ...state,\r\n                   //   addedItems:[...state.state.state.addedItems.slice(0,index), ...state.state.state.addedItems.slice(index+1)],\r\n                      ItemsCount:state.ItemsCount-1\r\n\r\n                    };\r\n                    console.log(\"obj\", obj);\r\n                    return obj;\r\n                }\r\n               \r\n                \r\n                default: \r\n                return {state\r\n                }\r\n    }\r\n}","import {combineReducers}  from 'redux';\r\nimport products from './products';\r\nimport cart from './cart';\r\nexport default combineReducers({\r\n    products,\r\n    cart\r\n})","import {GET_PRODUCTS, SORT_BY_PRICE} from '../actions/actionTypes';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nexport default function products(state=[],action)\r\n{\r\n    switch (action.type) {\r\n        case GET_PRODUCTS:{\r\n          \r\n            return action.products\r\n        }\r\n           \r\n        case SORT_BY_PRICE:{\r\n          return action.products\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","export const GET_PRODUCTS='GET_PRODUCTS';\r\nexport const INCREMENT_CART='INCREMENT_CART';\r\nexport const DECREMENT_CART='DECREMENT_CART';\r\nexport const ADDITEM='ADDITEM';\r\nexport const REMOVEITEM='REMOVEITEM';\r\nexport const SORT_BY_PRICE='SORT_BY_PRICE';","import React, {Component} from 'react';\r\nimport {ProductList} from './';\r\nclass Home extends Component{\r\n    render(){\r\n        const {products}=this.props;\r\n        console.log(\"products\", products);\r\n        return(\r\n            <div className='home'>\r\n                <ProductList products={products}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","const API_ROOT='https://my-json-server.typicode.com/FUNWITJS-1/ecommerceData/';\r\n//http://localhost:8000';\r\nexport const APIUrls={\r\n  getProducts:()=>`${API_ROOT}/products`,\r\n \r\n}","import {GET_PRODUCTS, SORT_BY_PRICE} from './actionTypes';\r\nimport {APIUrls} from '../Helper/urls';\r\nexport function fetchProducts(){\r\n\r\n    return (dispatch)=>{\r\n        const url=APIUrls.getProducts();\r\n        console.log(\"url\", url);\r\n        fetch(url)\r\n        .then(response=>{\r\n            console.log(\"response\", response.body);\r\n            return response.json();\r\n        }).then(data=>{\r\n            console.log(\"data\", data);\r\n            dispatch(updateProducts(data));\r\n        })\r\n    }\r\n}\r\nexport function sort(products)\r\n{\r\n    return(dispatch)=>{\r\n   const newProducts=products.sort((a,b)=>{\r\n       if(a.price<b.price) return -1;\r\n       if(a.price>b.price) return 1;\r\n       return 0;\r\n     \r\n   })\r\n   dispatch(sortByPrice(newProducts));\r\n}\r\n}\r\nexport function updateProducts(products){\r\n    return {\r\n        type:GET_PRODUCTS,\r\n        products\r\n    }\r\n}\r\nexport function sortByPrice(products)\r\n{\r\n    return {\r\n        type:SORT_BY_PRICE,\r\n        products\r\n    }\r\n}","import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {addToCart} from '../actions/cart';\r\nimport {sort} from '../actions/products';\r\nimport {connect} from 'react-redux';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport{Notifications} from './index';\r\n\r\nimport {NotificationConatiner, NotificationManager} from 'react-notifications';\r\nclass ProductList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            products:[],\r\n            added:false\r\n        }\r\n        \r\n    }\r\n \r\n    handleAddToCartClick=(product)=>{\r\n        \r\n        console.log(\"product click\", this.state);\r\n        \r\n        this.props.dispatch(addToCart(product));\r\n        this.setState({\r\n            added:true\r\n        });\r\n        console.log(\"this.state\", this.state);\r\n        //addToCart(product);\r\n    \r\n    }\r\n    sortProducts(products){\r\n        this.props.dispatch(sort(products));\r\n        this.forceUpdate();\r\n        console.log(\"this.state\", this.state);\r\n       \r\n    }\r\n    render(){\r\n        const {products}=this.props;\r\n       console.log(\"products\", products)\r\n        return (\r\n            <div className=\"ProductContainer\">\r\n                <div>\r\n                <p className=\"ProductsHeader\">\r\n                     BRANDS\r\n                 </p>\r\n              <button className=\"right\" onClick={()=>this.sortProducts(products)}>Sort</button>\r\n                 {this.state.added ? <Notifications/> :null}\r\n                </div>\r\n                <div>\r\n            <h3 className=\"text-3xl sm:text-4xl leading-normal font-extrabold tracking-tight text-gray-900\">\r\n            Brand <span className=\"text-indigo-600\">Shirts</span>\r\n              </h3>\r\n              </div>\r\n              {\r\n                products.map(product=>(\r\n                    <div className=\"product-list\">\r\n             <ul >\r\n\r\n            <li>  <img  src={product.imageUrl} alt='t-shirt-pic'/></li>\r\n            <li>Title :{product.title}</li>\r\n            <li>Price :{product.price}</li>\r\n            <li><button  className=\"addtocart\" onClick={()=>this.handleAddToCartClick(product)}>ADD TO CART</button></li>\r\n          \r\n            </ul>\r\n            </div>\r\n            \r\n       \r\n                ))}\r\n                </div>\r\n                    \r\n              \r\n                \r\n        )}\r\n            \r\n            \r\n                }\r\nfunction mapStateToProps(state){\r\n    return {\r\n        products:state.products\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ProductList);\r\n\r\n//export default ProductList;","import {INCREMENT_CART, DECREMENT_CART,ADDITEM, REMOVEITEM} from './actionTypes'\r\nexport function incrementCart(product){\r\n    \r\n    return {\r\n        type:ADDITEM,\r\n        product\r\n    }\r\n}\r\nexport function decrementCart(product){\r\n    return {\r\n        type:REMOVEITEM,\r\n        product\r\n    }\r\n}\r\n\r\nexport function addToCart(product){\r\n    return(dispatch)=>{\r\n        console.log(\"add product\", product);\r\n    dispatch(incrementCart(product));\r\n    return;\r\n    }\r\n}\r\nexport function removeFromCart(product){\r\n    return(dispatch)=>{\r\n        console.log(\"add product\", product);\r\n    dispatch(decrementCart(product));\r\n //   console.log(\"this.state remove\", this.state);\r\n \r\n    return;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { incrementCart, decrementCart , removeFromCart} from '../actions/cart';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport products from '../reducers/products';\r\n\r\nclass Cart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            addedItems:[],\r\n            ItemsCount:0\r\n            \r\n        }\r\n        //this.addedItems=[];\r\n        \r\n     //   this.addedItems=this.props.bind(this)\r\n    }\r\n       \r\n        handleRemoveFromCartClick=(product)=>{\r\n              this.props.dispatch(removeFromCart(product));\r\n        }\r\n    \r\n        componentDidMount()\r\n        {\r\n            const Items=this.props.cart.state.state.addedItems;\r\n            if(Items!=undefined){\r\n            this.setState({addedItems:Items});\r\n             }\r\n        }\r\n    render(){\r\n        const {cart}=this.props;\r\n        console.log(\"props\", this.props);\r\n        console.log(\"cart\", cart.state.state);\r\n        \r\n    //    const {cartItems}=cart;\r\n        //console.log(\"cartItems\", cartItems);\r\n        \r\n        //setTimeout(1000);\r\n        let addedItems=cart.state.state.addedItems;\r\n\r\n        console.log(\"addItems\", addedItems);    \r\n        return (\r\n            <div className=\"ProductContainer\">\r\n                <div>\r\n                <p className='ProductHeader'>\r\n                     Cart Items\r\n                 </p>\r\n                 </div>\r\n\r\n                \r\n                 \r\n                  {\r\n                      addedItems!=undefined &&\r\n                addedItems.map(product=>(\r\n             <div className=\"product-list\">\r\n            <ul>\r\n              <li>  <img  src={product.imageUrl} alt='t-shirt-pic'/></li>\r\n             <li>Title :{product.title}</li>\r\n             <li>Price :{product.price}</li>\r\n             <li><button  className=\"addtocart\" onClick={()=>this.handleRemoveFromCartClick(product)}>Remove</button></li>\r\n           </ul>\r\n           </div>\r\n        \r\n            \r\n            \r\n           \r\n                ))}\r\n                {\r\n                    cart.length==0 &&\r\n                    <p>\r\n                        Please Add Items to cart!\r\n                    </p>\r\n                }\r\n                \r\n                </div>\r\n                \r\n        )}\r\n            \r\n            \r\n                }\r\nfunction mapStateToProps(state){\r\n    return {\r\n        cart:state.cart\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","\r\nimport { Link } from 'react-router-dom'\r\nimport React, {Component} from 'react';\r\n\r\nclass Navbar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.ItemsCount=0\r\n        \r\n    }\r\n     componentDidMount()\r\n    {\r\n        this.setState({\r\n            ItemsCount:this.props\r\n        })\r\n    }  \r\n    render(){\r\n \r\n     let {ItemsCount}=this.props;\r\n   \r\n     console.log(\"props in navbar\", this.props);\r\n    return(\r\n            <nav className=\"nav-wrapper\">\r\n                <div id=\"brand\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Shopping</Link>\r\n                    </div>\r\n                <div >  \r\n                    <ul className=\"right\">\r\n                        <li><Link to=\"/\">Shop</Link></li>\r\n                        <li><Link to=\"/cart\">My cart</Link></li>\r\n                       \r\n                    <li><Link to=\"/cart\"><i class=\"fa fa-shopping-cart\">{ItemsCount}</i></Link></li>\r\n                    </ul>\r\n                    </div>\r\n            </nav>  \r\n    )\r\n}\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { MDBNotification, MDBContainer } from \"mdbreact\";\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    return (\r\n       \r\n     <MDBNotification\r\n        autohide={1000} // by default = ∞ ms\r\n        bodyClassName=\"p-5 font-weight-bold white-text\"\r\n        className=\"stylish-color-dark\"\r\n        closeClassName=\"blue-grey-text\"\r\n        fade\r\n        icon=\"bell\"\r\n        iconClassName=\"blue-grey-text\"\r\n        message=\"Item Added to cart\"\r\n        show\r\n        text=\"Contine Shopping!\"\r\n        title=\"Notification\"\r\n        titleClassName=\"elegant-color-dark white-text\"\r\n        style={{\r\n            width: \"auto\",\r\n            position: \"fixed\",\r\n            top: \"50px\",\r\n            right: \"20px\",\r\n            zIndex: 9999\r\n          }}\r\n      />\r\n  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;","import {connect} from 'react-redux';\r\n\r\nimport {Home, Cart, Navbar} from './index';\r\nimport React, {Component} from 'react';\r\nimport {fetchProducts} from '../actions/products';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter as Router , Switch, Route} from 'react-router-dom';\r\nimport '../css/App.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nclass App extends Component{\r\n    componentDidMount(){\r\n        let data=this.props.dispatch(fetchProducts());\r\n      //  this.setState(data);\r\n       \r\n    }\r\n    render(){\r\n        const {products, cart} =this.props;\r\n        console.log(\"this.props\",this.props);\r\n        return (\r\n            <Router>\r\n                <div>\r\n                   \r\n                <Navbar ItemsCount={cart.ItemsCount}/>\r\n                    <Switch>\r\n                        <Route\r\n                           exact={true}\r\n                           path='/'\r\n                           render={(props)=>{\r\n                               return <Home {...props} products={products}/>\r\n                           }}\r\n                           ></Route>\r\n                           <Route path=\"/cart\" render={(props)=>{\r\n                               return <Cart {...props}  addedItems={cart}/>\r\n                           }}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        products:state.products,\r\n        cart:state.cart\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport {render} from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {createStore } from 'redux'\r\n\r\n\r\nimport reducer from './reducers'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport App from './components/App';\r\nimport {configureStore} from './store';\r\nimport ReactDOM from 'react-dom';\r\nconst store=configureStore();\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n","import {createStore  , applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers/index';\r\nimport logger from 'redux-logger';\r\n\r\nlet store;\r\nexport function configureStore(){\r\n    store=createStore(reducers, applyMiddleware(thunk, logger));\r\n    return store;\r\n}"],"sourceRoot":""}